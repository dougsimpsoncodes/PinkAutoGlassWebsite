# Gitleaks Configuration for Pink Auto Glass
# https://github.com/gitleaks/gitleaks

title = "Pink Auto Glass - Secret Detection Config"

[extend]
# useDefault will extend the base configuration with the default gitleaks config:
# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
useDefault = true

[allowlist]
description = "Allowlisted files and patterns"
paths = [
    # Example/template files
    '''\.env\.example$''',
    '''\.env\.template$''',

    # Test files with mock data
    '''tests?/.*\.ts$''',
    '''tests?/.*\.js$''',
    '''\.*\.spec\.ts$''',
    '''\.*\.test\.ts$''',

    # Documentation
    '''docs/.*\.md$''',
    '''README\.md$''',
    '''SECURITY\.md$''',

    # Package lock files
    '''package-lock\.json$''',
    '''yarn\.lock$''',
]

regexes = [
    # Placeholder values in .env.example
    '''your-project-id''',
    '''your-anon-key''',
    '''your-service-role-key''',
    '''your-32-character-hex-key''',
    '''your-twilio''',
    '''your-sendgrid''',
    '''your-google-maps''',
    '''your-recaptcha''',
    '''G-XXXXXXXXXX''',
    '''https://your-''',
    '''example\.com''',

    # Test tokens (clearly marked)
    '''eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\.test''',
    '''test-secret-key-for-ci-only''',

    # Public information (not secrets)
    '''pinkautoglass\.com''',
    '''service@pinkautoglass\.com''',
    '''\+17209187465''',
]

stopwords = [
    "example",
    "test",
    "mock",
    "placeholder",
    "your-",
    "XXXXXXXXXX",
]

[[rules]]
id = "supabase-anon-key"
description = "Supabase Anonymous/Public Key"
regex = '''(?i)(supabase.*anon.*key|next_public_supabase_anon_key)['"]?\s*[:=]\s*['"]?([a-zA-Z0-9_-]{20,})'''
tags = ["supabase", "key", "api"]

[[rules]]
id = "supabase-service-role"
description = "Supabase Service Role Key"
regex = '''(?i)(supabase.*service.*role.*key)['"]?\s*[:=]\s*['"]?([a-zA-Z0-9_-]{20,})'''
tags = ["supabase", "key", "api", "critical"]
keywords = [
    "supabase_service_role_key",
    "service-role",
]

[[rules]]
id = "form-integrity-secret"
description = "Form Integrity Secret"
regex = '''(?i)(form_integrity_secret)['"]?\s*[:=]\s*['"]?([a-f0-9]{64})'''
tags = ["secret", "form"]

[[rules]]
id = "fingerprint-salt"
description = "Fingerprint Salt"
regex = '''(?i)(fingerprint_salt)['"]?\s*[:=]\s*['"]?([a-f0-9]{64})'''
tags = ["secret", "security"]

[[rules]]
id = "private-key-file"
description = "Private Key File"
regex = '''-----BEGIN (RSA |EC |OPENSSH )?PRIVATE KEY-----'''
tags = ["key", "critical"]

[[rules]]
id = "jwt-token"
description = "JSON Web Token"
regex = '''eyJ[a-zA-Z0-9_-]*\.[a-zA-Z0-9_-]*\.[a-zA-Z0-9_-]+'''
tags = ["jwt", "token"]
# This will catch JWTs but allowlist will exclude test tokens

[allowlist.commits]
# You can allowlist specific commits if they were incorrectly flagged
# Example: "commit-hash-here"
